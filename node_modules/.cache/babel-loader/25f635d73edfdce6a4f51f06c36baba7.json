{"ast":null,"code":"var _jsxFileName = \"/home/muriloomaia/Documents/gitHub/app-receita/src/components/InputGen.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function InputGen(_ref) {\n  let {\n    config\n  } = _ref;\n  const [type, name, dataTestId, value, checked, onChange, labelText, className] = config;\n\n  if (checked === false) {\n    return /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: dataTestId,\n      \"data-testid\": `${dataTestId}-label`,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: labelText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: type,\n        name: name,\n        \"data-testid\": dataTestId,\n        value: value,\n        onChange: onChange,\n        className: className\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"label\", {\n    htmlFor: dataTestId,\n    \"data-testid\": `${dataTestId}-label`,\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      children: labelText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: type,\n      name: name,\n      \"data-testid\": dataTestId,\n      checked: checked,\n      onChange: onChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_c = InputGen;\nInputGen.propTypes = {\n  config: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.func, PropTypes.number, PropTypes.bool])).isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"InputGen\");","map":{"version":3,"sources":["/home/muriloomaia/Documents/gitHub/app-receita/src/components/InputGen.jsx"],"names":["React","PropTypes","InputGen","config","type","name","dataTestId","value","checked","onChange","labelText","className","propTypes","arrayOf","oneOfType","string","func","number","bool","isRequired"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,eAAe,SAASC,QAAT,OAA8B;AAAA,MAAZ;AAAEC,IAAAA;AAAF,GAAY;AAC3C,QAAM,CAACC,IAAD,EAAOC,IAAP,EAAaC,UAAb,EAAyBC,KAAzB,EAAgCC,OAAhC,EAAyCC,QAAzC,EAAmDC,SAAnD,EACJC,SADI,IACSR,MADf;;AAGA,MAAIK,OAAO,KAAK,KAAhB,EAAuB;AACrB,wBACE;AAAO,MAAA,OAAO,EAAGF,UAAjB;AAA8B,qBAAe,GAAEA,UAAW,QAA1D;AAAA,8BACE;AAAA,kBAAQI;AAAR;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACE,QAAA,IAAI,EAAGN,IADT;AAEE,QAAA,IAAI,EAAGC,IAFT;AAGE,uBAAcC,UAHhB;AAIE,QAAA,KAAK,EAAGC,KAJV;AAKE,QAAA,QAAQ,EAAGE,QALb;AAME,QAAA,SAAS,EAAGE;AANd;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAaD;;AAED,sBACE;AAAO,IAAA,OAAO,EAAGL,UAAjB;AAA8B,mBAAe,GAAEA,UAAW,QAA1D;AAAA,4BACE;AAAA,gBAAQI;AAAR;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AACE,MAAA,IAAI,EAAGN,IADT;AAEE,MAAA,IAAI,EAAGC,IAFT;AAGE,qBAAcC,UAHhB;AAIE,MAAA,OAAO,EAAGE,OAJZ;AAKE,MAAA,QAAQ,EAAGC;AALb;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD;KAhCuBP,Q;AAkCxBA,QAAQ,CAACU,SAAT,GAAqB;AACnBT,EAAAA,MAAM,EAAEF,SAAS,CAACY,OAAV,CAAkBZ,SAAS,CAACa,SAAV,CAAoB,CAC5Cb,SAAS,CAACc,MADkC,EAE5Cd,SAAS,CAACe,IAFkC,EAG5Cf,SAAS,CAACgB,MAHkC,EAI5ChB,SAAS,CAACiB,IAJkC,CAApB,CAAlB,EAKJC;AANe,CAArB","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default function InputGen({ config }) {\n  const [type, name, dataTestId, value, checked, onChange, labelText,\n    className] = config;\n\n  if (checked === false) {\n    return (\n      <label htmlFor={ dataTestId } data-testid={ `${dataTestId}-label` }>\n        <span>{ labelText }</span>\n        <input\n          type={ type }\n          name={ name }\n          data-testid={ dataTestId }\n          value={ value }\n          onChange={ onChange }\n          className={ className }\n        />\n      </label>\n    );\n  }\n\n  return (\n    <label htmlFor={ dataTestId } data-testid={ `${dataTestId}-label` }>\n      <span>{ labelText }</span>\n      <input\n        type={ type }\n        name={ name }\n        data-testid={ dataTestId }\n        checked={ checked }\n        onChange={ onChange }\n      />\n    </label>\n  );\n}\n\nInputGen.propTypes = {\n  config: PropTypes.arrayOf(PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.func,\n    PropTypes.number,\n    PropTypes.bool,\n  ])).isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}