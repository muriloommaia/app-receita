{"ast":null,"code":"var _jsxFileName = \"/home/muriloomaia/Documents/gitHub/app-receita/src/pages/ExploreByArea.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Dropdown from '../components/ExploreByArea/Dropdown';\nimport RecipesRender from '../components/ExploreByArea/RecipesRender';\nimport Footer from '../components/Footer';\nimport Header from '../components/Header';\nimport fetchApi from '../services/fetchApi';\nimport { changeArea, changeFoodArea } from '../store/dataSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ExploreByArea() {\n  _s();\n\n  const {\n    pathname\n  } = window.location;\n  const dispatch = useDispatch();\n  const actualArea = useSelector(state => state.search.area);\n  useEffect(() => {\n    async function fetchData(end, path) {\n      const data = await fetchApi(end, path);\n      dispatch(changeArea(data.meals.map(meal => meal.strArea)));\n    }\n\n    fetchData({\n      type: 'category',\n      category: {\n        categoryType: 'area'\n      }\n    }, pathname);\n  }, [dispatch, pathname]);\n  useEffect(() => {\n    async function fetchData(end, path) {\n      const data = await fetchApi(end, path);\n      dispatch(changeFoodArea(data));\n    }\n\n    if (actualArea === 'All') {\n      fetchData({\n        type: '',\n        category: {\n          search: ''\n        }\n      }, pathname);\n    } else {\n      fetchData({\n        type: 'getByArea',\n        getByArea: {\n          search: actualArea\n        }\n      }, pathname);\n    }\n  }, [dispatch, pathname, actualArea]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      searchRender: true,\n      title: \"Explorar Origem\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dropdown, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RecipesRender, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ExploreByArea, \"FOB6KRXGRaMhAJPdZbICt+LceAQ=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = ExploreByArea;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExploreByArea\");","map":{"version":3,"sources":["/home/muriloomaia/Documents/gitHub/app-receita/src/pages/ExploreByArea.jsx"],"names":["React","useEffect","useDispatch","useSelector","Dropdown","RecipesRender","Footer","Header","fetchApi","changeArea","changeFoodArea","ExploreByArea","pathname","window","location","dispatch","actualArea","state","search","area","fetchData","end","path","data","meals","map","meal","strArea","type","category","categoryType","getByArea"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,QAAP,MAAqB,sCAArB;AACA,OAAOC,aAAP,MAA0B,2CAA1B;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,SAASC,UAAT,EAAqBC,cAArB,QAA2C,oBAA3C;;AAEA,eAAe,SAASC,aAAT,GAAyB;AAAA;;AACtC,QAAM;AAAEC,IAAAA;AAAF,MAAeC,MAAM,CAACC,QAA5B;AACA,QAAMC,QAAQ,GAAGb,WAAW,EAA5B;AACA,QAAMc,UAAU,GAAGb,WAAW,CAAEc,KAAD,IAAWA,KAAK,CAACC,MAAN,CAAaC,IAAzB,CAA9B;AACAlB,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAemB,SAAf,CAAyBC,GAAzB,EAA8BC,IAA9B,EAAoC;AAClC,YAAMC,IAAI,GAAG,MAAMf,QAAQ,CAACa,GAAD,EAAMC,IAAN,CAA3B;AACAP,MAAAA,QAAQ,CAACN,UAAU,CAACc,IAAI,CAACC,KAAL,CAAWC,GAAX,CAAgBC,IAAD,IAAUA,IAAI,CAACC,OAA9B,CAAD,CAAX,CAAR;AACD;;AACDP,IAAAA,SAAS,CAAC;AACRQ,MAAAA,IAAI,EAAE,UADE;AAERC,MAAAA,QAAQ,EAAE;AAAEC,QAAAA,YAAY,EAAE;AAAhB;AAFF,KAAD,EAGNlB,QAHM,CAAT;AAID,GATQ,EASN,CAACG,QAAD,EAAWH,QAAX,CATM,CAAT;AAWAX,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAemB,SAAf,CAAyBC,GAAzB,EAA8BC,IAA9B,EAAoC;AAClC,YAAMC,IAAI,GAAG,MAAMf,QAAQ,CAACa,GAAD,EAAMC,IAAN,CAA3B;AACAP,MAAAA,QAAQ,CAACL,cAAc,CAACa,IAAD,CAAf,CAAR;AACD;;AACD,QAAIP,UAAU,KAAK,KAAnB,EAA0B;AACxBI,MAAAA,SAAS,CAAC;AAAEQ,QAAAA,IAAI,EAAE,EAAR;AAAYC,QAAAA,QAAQ,EAAE;AAAEX,UAAAA,MAAM,EAAE;AAAV;AAAtB,OAAD,EAAyCN,QAAzC,CAAT;AACD,KAFD,MAEO;AACLQ,MAAAA,SAAS,CAAC;AACRQ,QAAAA,IAAI,EAAE,WADE;AAERG,QAAAA,SAAS,EAAE;AAAEb,UAAAA,MAAM,EAAEF;AAAV;AAFH,OAAD,EAGNJ,QAHM,CAAT;AAID;AACF,GAbQ,EAaN,CAACG,QAAD,EAAWH,QAAX,EAAqBI,UAArB,CAbM,CAAT;AAeA,sBACE;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,YAAY,MAApB;AAAqB,MAAA,KAAK,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;GAtCuBL,a;UAELT,W,EACEC,W;;;KAHGQ,a","sourcesContent":["import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Dropdown from '../components/ExploreByArea/Dropdown';\nimport RecipesRender from '../components/ExploreByArea/RecipesRender';\nimport Footer from '../components/Footer';\nimport Header from '../components/Header';\nimport fetchApi from '../services/fetchApi';\nimport { changeArea, changeFoodArea } from '../store/dataSlice';\n\nexport default function ExploreByArea() {\n  const { pathname } = window.location;\n  const dispatch = useDispatch();\n  const actualArea = useSelector((state) => state.search.area);\n  useEffect(() => {\n    async function fetchData(end, path) {\n      const data = await fetchApi(end, path);\n      dispatch(changeArea(data.meals.map((meal) => meal.strArea)));\n    }\n    fetchData({\n      type: 'category',\n      category: { categoryType: 'area' },\n    }, pathname);\n  }, [dispatch, pathname]);\n\n  useEffect(() => {\n    async function fetchData(end, path) {\n      const data = await fetchApi(end, path);\n      dispatch(changeFoodArea(data));\n    }\n    if (actualArea === 'All') {\n      fetchData({ type: '', category: { search: '' } }, pathname);\n    } else {\n      fetchData({\n        type: 'getByArea',\n        getByArea: { search: actualArea },\n      }, pathname);\n    }\n  }, [dispatch, pathname, actualArea]);\n\n  return (\n    <div>\n      <Header searchRender title=\"Explorar Origem\" />\n      <Dropdown />\n      <RecipesRender />\n      <Footer />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}