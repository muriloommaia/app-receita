{"ast":null,"code":"import _slicedToArray from\"/home/muriloomaia/Documents/gitHub/app-receita/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _toConsumableArray from\"/home/muriloomaia/Documents/gitHub/app-receita/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import React,{useEffect}from'react';import{useDispatch,useSelector}from'react-redux';import{Redirect}from'react-router';import{changeCheck}from'../../store/checkSlice';import{jsx as _jsx}from\"react/jsx-runtime\";var handleClick=function handleClick(setIsOpen,isOpen,allCheck){setIsOpen(!isOpen);if(!isOpen&&allCheck){var actualRecipe=JSON.parse(localStorage.getItem('actualRecipe'));var doneRecipes=JSON.parse(localStorage.getItem('doneRecipes'));actualRecipe.doneDate=new Date().toLocaleDateString('pt-BR',{timeZone:'UTC'});localStorage.setItem('doneRecipes',JSON.stringify([].concat(_toConsumableArray(doneRecipes),[actualRecipe])));}};export default function ButtonRecipe(_ref){var testBtn=_ref.testBtn;var _React$useState=React.useState(false),_React$useState2=_slicedToArray(_React$useState,2),isOpen=_React$useState2[0],setIsOpen=_React$useState2[1];var dispatch=useDispatch();var _React$useState3=React.useState('Iniciar'),_React$useState4=_slicedToArray(_React$useState3,2),text=_React$useState4[0],setText=_React$useState4[1];var _useSelector=useSelector(function(state){return state.allChecked;}),allCheck=_useSelector.allCheck;var pathname=window.location.pathname;useEffect(function(){dispatch(changeCheck(false));var inProgressRecipes=JSON.parse(localStorage.getItem('inProgressRecipes'));var keyName=pathname.includes('comidas')?'meals':'cocktails';var ingredientsSaved=inProgressRecipes[keyName][pathname.split('/')[2]];if(ingredientsSaved){setText('Continuar');}setIsOpen(false);},[pathname,dispatch]);if(isOpen&&allCheck)return/*#__PURE__*/_jsx(Redirect,{to:\"/receitas-feitas\"});if(isOpen)return/*#__PURE__*/_jsx(Redirect,{to:\"\".concat(pathname,\"/in-progress\")});if(pathname.includes('in-progress')){return/*#__PURE__*/_jsx(\"div\",{className:\"disabled:opacity-50\",children:/*#__PURE__*/_jsx(\"button\",{type:\"button\",disabled:!allCheck,\"data-testid\":\"\".concat(testBtn,\"-recipe-btn\"),className:\"fixed bottom-0 p-3 border bg-primary text-gray-50 left-1/2 transform -translate-x-2/4 disabled:opacity-0\",onClick:function onClick(){return handleClick(setIsOpen,isOpen,allCheck);},children:\"\".concat(allCheck?'Finalizar':text,\" Receita\")})});}return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"button\",{type:\"button\",\"data-testid\":\"\".concat(testBtn,\"-recipe-btn\"),className:\"fixed bottom-0 p-3 border bg-primary text-gray-50 left-1/2 transform -translate-x-2/4 disabled:opacity-50\",onClick:function onClick(){return handleClick(setIsOpen,isOpen,allCheck);},children:\"\".concat(text,\" Receita\")})});}ButtonRecipe.defaultProps={testBtn:'start'};","map":{"version":3,"sources":["/home/muriloomaia/Documents/gitHub/app-receita/src/components/Details/ButtonRecipe.jsx"],"names":["React","useEffect","useDispatch","useSelector","Redirect","changeCheck","handleClick","setIsOpen","isOpen","allCheck","actualRecipe","JSON","parse","localStorage","getItem","doneRecipes","doneDate","Date","toLocaleDateString","timeZone","setItem","stringify","ButtonRecipe","testBtn","useState","dispatch","text","setText","state","allChecked","pathname","window","location","inProgressRecipes","keyName","includes","ingredientsSaved","split","defaultProps"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Redirect } from 'react-router';\nimport { changeCheck } from '../../store/checkSlice';\n\nconst handleClick = (setIsOpen, isOpen, allCheck) => {\n  setIsOpen(!isOpen);\n  if (!isOpen && allCheck) {\n    const actualRecipe = JSON.parse(localStorage.getItem('actualRecipe'));\n    const doneRecipes = JSON.parse(localStorage.getItem('doneRecipes'));\n    actualRecipe.doneDate = new Date().toLocaleDateString('pt-BR', { timeZone: 'UTC' });\n    localStorage.setItem('doneRecipes', JSON.stringify([...doneRecipes, actualRecipe]));\n  }\n};\n\nexport default function ButtonRecipe({ testBtn }) {\n  const [isOpen, setIsOpen] = React.useState(false);\n  const dispatch = useDispatch();\n  const [text, setText] = React.useState('Iniciar');\n  const { allCheck } = useSelector((state) => state.allChecked);\n  const { pathname } = window.location;\n  useEffect(() => {\n    dispatch(changeCheck(false));\n    const inProgressRecipes = JSON.parse(localStorage.getItem('inProgressRecipes'));\n    const keyName = pathname.includes('comidas') ? 'meals' : 'cocktails';\n    const ingredientsSaved = inProgressRecipes[keyName][pathname.split('/')[2]];\n    if (ingredientsSaved) {\n      setText('Continuar');\n    }\n    setIsOpen(false);\n  }, [pathname, dispatch]);\n\n  if (isOpen && allCheck) return <Redirect to=\"/receitas-feitas\" />;\n  if (isOpen) return <Redirect to={ `${pathname}/in-progress` } />;\n  if (pathname.includes('in-progress')) {\n    return (\n      <div className=\"disabled:opacity-50\">\n        <button\n          type=\"button\"\n          disabled={ !allCheck }\n          data-testid={ `${testBtn}-recipe-btn` }\n          className=\"fixed bottom-0 p-3 border bg-primary text-gray-50 left-1/2 transform -translate-x-2/4 disabled:opacity-0\"\n          onClick={ () => handleClick(setIsOpen, isOpen, allCheck) }\n        >\n          {`${allCheck ? 'Finalizar' : text} Receita`}\n        </button>\n      </div>\n    );\n  }\n  return (\n    <div>\n      <button\n        type=\"button\"\n        data-testid={ `${testBtn}-recipe-btn` }\n        className=\"fixed bottom-0 p-3 border bg-primary text-gray-50 left-1/2 transform -translate-x-2/4 disabled:opacity-50\"\n        onClick={ () => handleClick(setIsOpen, isOpen, allCheck) }\n      >\n        {`${text} Receita`}\n      </button>\n    </div>\n  );\n}\n\nButtonRecipe.propTypes = {\n  testBtn: PropTypes.string,\n};\n\nButtonRecipe.defaultProps = {\n  testBtn: 'start',\n};\n"]},"metadata":{},"sourceType":"module"}