{"ast":null,"code":"var _jsxFileName = \"/home/muriloomaia/Documents/gitHub/app-receita/src/components/Categories.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Button, ButtonGroup as div } from 'react-bootstrap';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { changeSearch } from '../store/searchSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Categories() {\n  _s();\n\n  const categories = useSelector(state => state.data.categories);\n  const selectedCategory = useSelector(state => state.search.category.search);\n  const dispatch = useDispatch();\n  if (!categories) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading ...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 27\n  }, this);\n  const catValues = [{\n    strCategory: 'All'\n  }, ...Object.values(categories)[0]];\n  const HALF_CATEGORIES = 2;\n  const MAX_CATEGORIES = 5;\n\n  function handleClick(_ref) {\n    let {\n      target: {\n        value\n      }\n    } = _ref;\n\n    if (selectedCategory === value || value === 'All') {\n      return dispatch(changeSearch({\n        type: '',\n        category: {\n          search: ''\n        }\n      }));\n    }\n\n    dispatch(changeSearch({\n      type: 'category',\n      category: {\n        search: value,\n        isClicked: false,\n        categoryType: 'filter'\n      }\n    }));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col asda\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center my-1 md:my-3\",\n      children: catValues.map((_ref2, i) => {\n        let {\n          strCategory\n        } = _ref2;\n\n        if (i <= HALF_CATEGORIES) {\n          return /*#__PURE__*/_jsxDEV(\"button\", {\n            \"data-testid\": `${strCategory}-category-filter`,\n            id: \"toggle-check\",\n            type: \"checkbox\",\n            className: \"border mx-2 p-2\",\n            checked: selectedCategory === strCategory,\n            value: strCategory,\n            onClick: handleClick,\n            children: strCategory\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 15\n          }, this);\n        }\n\n        return null;\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      name: \"category\",\n      size: \"sm\",\n      children: catValues.map((_ref3, i) => {\n        let {\n          strCategory\n        } = _ref3;\n        if (i > MAX_CATEGORIES || i <= HALF_CATEGORIES) return null;\n        return /*#__PURE__*/_jsxDEV(\"button\", {\n          \"data-testid\": `${strCategory}-category-filter`,\n          className: \"border mx-1 p-1\",\n          id: \"toggle-check\",\n          type: \"checkbox\",\n          checked: selectedCategory === strCategory,\n          value: strCategory,\n          onClick: handleClick,\n          children: strCategory\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Categories, \"I6MDVZ2oTsE1NZBmpujNqBsluIo=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c = Categories;\nexport default Categories;\n\nvar _c;\n\n$RefreshReg$(_c, \"Categories\");","map":{"version":3,"sources":["/home/muriloomaia/Documents/gitHub/app-receita/src/components/Categories.jsx"],"names":["React","Button","ButtonGroup","div","useSelector","useDispatch","changeSearch","Categories","categories","state","data","selectedCategory","search","category","dispatch","catValues","strCategory","Object","values","HALF_CATEGORIES","MAX_CATEGORIES","handleClick","target","value","type","isClicked","categoryType","map","i"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Button, ButtonGroup as div } from 'react-bootstrap';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { changeSearch } from '../store/searchSlice';\n\nfunction Categories() {\n  const categories = useSelector((state) => state.data.categories);\n  const selectedCategory = useSelector((state) => state.search.category.search);\n  const dispatch = useDispatch();\n\n  if (!categories) return <p>Loading ...</p>;\n\n  const catValues = [{ strCategory: 'All' }, ...Object.values(categories)[0]];\n  const HALF_CATEGORIES = 2;\n  const MAX_CATEGORIES = 5;\n\n  function handleClick({ target: { value } }) {\n    if (selectedCategory === value || value === 'All') {\n      return dispatch(changeSearch({ type: '', category: { search: '' } }));\n    }\n    dispatch(changeSearch({\n      type: 'category',\n      category: { search: value, isClicked: false, categoryType: 'filter' },\n    }));\n  }\n\n  return (\n    <div className=\"flex flex-col asda\">\n      <div className=\"flex justify-center my-1 md:my-3\">\n        { catValues.map(({ strCategory }, i) => {\n          if (i <= HALF_CATEGORIES) {\n            return (\n              <button\n                data-testid={ `${strCategory}-category-filter` }\n                key={ i }\n                id=\"toggle-check\"\n                type=\"checkbox\"\n                className=\"border mx-2 p-2\"\n                checked={ selectedCategory === strCategory }\n                value={ strCategory }\n                onClick={ handleClick }\n              >\n                { strCategory }\n              </button>\n            );\n          }\n          return null;\n        })}\n      </div>\n      <div name=\"category\" size=\"sm\">\n        { catValues.map(({ strCategory }, i) => {\n          if (i > MAX_CATEGORIES || i <= HALF_CATEGORIES) return null;\n          return (\n            <button\n              data-testid={ `${strCategory}-category-filter` }\n              key={ i }\n                className=\"border mx-1 p-1\"\n              id=\"toggle-check\"\n              type=\"checkbox\"\n              checked={ selectedCategory === strCategory }\n              value={ strCategory }\n              onClick={ handleClick }\n            >\n              { strCategory }\n            </button>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n\nexport default Categories;\n"]},"metadata":{},"sourceType":"module"}