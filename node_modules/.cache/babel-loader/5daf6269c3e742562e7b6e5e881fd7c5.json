{"ast":null,"code":"var _jsxFileName = \"/home/muriloomaia/Documents/gitHub/app-receita/src/components/Details/HeaderDetails.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport shareIcon from \"../../images/shareIcon.svg\";\nimport whiteHeartIcon from \"../../images/whiteHeartIcon.svg\";\nimport blackHeartIcon from \"../../images/blackHeartIcon.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst setTags = tags => {\n  let arrayTags = [];\n\n  if (tags) {\n    if (tags.includes(',')) {\n      arrayTags = tags.replace(/\\s/g, '').split(',');\n    } else {\n      arrayTags.push(tags);\n    }\n  }\n\n  return arrayTags;\n};\n\nexport default function HeaderDetails() {\n  _s();\n\n  const [favorite, setFavorite] = React.useState(false);\n  const [clipboard, setClipboard] = React.useState(false);\n  const {\n    detail\n  } = useSelector(state => state);\n  const key = Object.keys(detail)[0];\n  const recipe = detail[key][0];\n  const path = window.location.pathname.split('/')[1];\n  let ref = null;\n  let localStorageObj = null;\n  let actualRecipeObj = null;\n  const {\n    pathname\n  } = window.location;\n\n  if (path === 'comidas') {\n    ref = {\n      strTitle: 'strMeal',\n      strThumb: 'strMealThumb',\n      strCateg: 'strCategory'\n    };\n    localStorageObj = {\n      id: recipe.idMeal,\n      type: 'comida',\n      area: recipe.strArea,\n      category: recipe.strCategory,\n      alcoholicOrNot: '',\n      name: recipe.strMeal,\n      image: recipe.strMealThumb\n    };\n    actualRecipeObj = { ...localStorageObj,\n      tags: setTags(recipe.strTags)\n    };\n  }\n\n  if (path === 'bebidas') {\n    ref = {\n      strTitle: 'strDrink',\n      strThumb: 'strDrinkThumb',\n      strCateg: 'strAlcoholic'\n    };\n    localStorageObj = {\n      id: recipe.idDrink,\n      type: 'bebida',\n      area: '',\n      category: recipe.strCategory,\n      alcoholicOrNot: recipe.strAlcoholic,\n      name: recipe.strDrink,\n      image: recipe.strDrinkThumb\n    };\n    actualRecipeObj = { ...localStorageObj,\n      tags: setTags(recipe.strTags)\n    };\n  }\n\n  if (clipboard) {\n    setTimeout(() => {\n      setClipboard(false);\n    }, 1000);\n  }\n\n  useEffect(() => {\n    const isFavorite = JSON.parse(localStorage.getItem('favoriteRecipes')).some(item => item.id === recipe.idMeal || item.id === recipe.idDrink);\n    setFavorite(isFavorite);\n    localStorage.setItem('actualRecipe', JSON.stringify(actualRecipeObj));\n  }, [recipe, actualRecipeObj]);\n\n  const handleClickFavorite = () => {\n    setFavorite(!favorite);\n\n    if (!favorite) {\n      const favoriteRecipes = JSON.parse(localStorage.getItem('favoriteRecipes'));\n      const allFavorites = [...favoriteRecipes, localStorageObj];\n      localStorage.setItem('favoriteRecipes', JSON.stringify(allFavorites));\n    } else {\n      const favoriteRecipes = JSON.parse(localStorage.getItem('favoriteRecipes'));\n      const allFavorites = favoriteRecipes.filter(item => item.id !== localStorageObj.id);\n      localStorage.setItem('favoriteRecipes', JSON.stringify(allFavorites));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"block md:flex md:items-center md:justify-between md:mb-12\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: recipe[ref.strThumb],\n        alt: \"test\",\n        \"data-testid\": \"recipe-photo\",\n        className: \"w-full h-48 object-cover md:w-96 md:h-auto\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"my-2 h-full flex justify-between px-4 sm:items-center sm:pr-44\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          \"data-testid\": \"recipe-title\",\n          className: \"text-2xl border-b border-gray-900 md:text-7xl font-sans md:font-serif\",\n          children: recipe[ref.strTitle]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          \"data-testid\": \"recipe-category\",\n          className: \"text-center text-gray-800 font-sans md:font-serif md:text-5xl\",\n          children: recipe[ref.strCateg]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"bg-transparent border-0 mr-3 p-2\",\n            id: \"liveToastBtn\",\n            \"data-testid\": \"share-btn\" // https://stackoverflow.com/questions/39501289/in-reactjs-how-to-copy-text-to-clipboard - copy to clipboard\n            ,\n            onClick: () => {\n              const link = pathname.includes('progress') ? pathname.replace('/in-progress', '') : pathname;\n              navigator.clipboard.writeText(`http://localhost:3000${link}`);\n              setClipboard(true);\n            },\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: shareIcon,\n              alt: \"share icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"bg-transparent border-0\",\n            \"data-testid\": \"favorite-btn\",\n            onClick: handleClickFavorite,\n            src: favorite ? 'blackHeartIcon' : 'whiteHeartIcon',\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: favorite ? blackHeartIcon : whiteHeartIcon,\n              alt: \"favorite icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: `${clipboard ? 'visible' : 'hidden'} transform  duration-1000 transition-all opacity-90 ease-in-out`,\n          children: \"Link copiado!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n}\n\n_s(HeaderDetails, \"MZsiGdtZBm/HecKZATwnRLKhE/k=\", false, function () {\n  return [useSelector];\n});\n\n_c = HeaderDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"HeaderDetails\");","map":{"version":3,"sources":["/home/muriloomaia/Documents/gitHub/app-receita/src/components/Details/HeaderDetails.jsx"],"names":["React","useEffect","useSelector","setTags","tags","arrayTags","includes","replace","split","push","HeaderDetails","favorite","setFavorite","useState","clipboard","setClipboard","detail","state","key","Object","keys","recipe","path","window","location","pathname","ref","localStorageObj","actualRecipeObj","strTitle","strThumb","strCateg","id","idMeal","type","area","strArea","category","strCategory","alcoholicOrNot","name","strMeal","image","strMealThumb","strTags","idDrink","strAlcoholic","strDrink","strDrinkThumb","setTimeout","isFavorite","JSON","parse","localStorage","getItem","some","item","setItem","stringify","handleClickFavorite","favoriteRecipes","allFavorites","filter","link","navigator","writeText","shareIcon","blackHeartIcon","whiteHeartIcon"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport shareIcon from '../../images/shareIcon.svg';\nimport whiteHeartIcon from '../../images/whiteHeartIcon.svg';\nimport blackHeartIcon from '../../images/blackHeartIcon.svg';\n\nconst setTags = (tags) => {\n  let arrayTags = [];\n  if (tags) {\n    if (tags.includes(',')) {\n      arrayTags = tags.replace(/\\s/g, '').split(',');\n    } else {\n      arrayTags.push(tags);\n    }\n  }\n  return arrayTags;\n};\n\nexport default function HeaderDetails() {\n  const [favorite, setFavorite] = React.useState(false);\n  const [clipboard, setClipboard] = React.useState(false);\n  const { detail } = useSelector((state) => state);\n  const key = Object.keys(detail)[0];\n  const recipe = detail[key][0];\n  const path = window.location.pathname.split('/')[1];\n  let ref = null;\n  let localStorageObj = null;\n  let actualRecipeObj = null;\n  const { pathname } = window.location;\n  if (path === 'comidas') {\n    ref = { strTitle: 'strMeal', strThumb: 'strMealThumb', strCateg: 'strCategory' };\n\n    localStorageObj = { id: recipe.idMeal,\n      type: 'comida',\n      area: recipe.strArea,\n      category: recipe.strCategory,\n      alcoholicOrNot: '',\n      name: recipe.strMeal,\n      image: recipe.strMealThumb };\n    actualRecipeObj = { ...localStorageObj, tags: setTags(recipe.strTags) };\n  }\n  if (path === 'bebidas') {\n    ref = { strTitle: 'strDrink', strThumb: 'strDrinkThumb', strCateg: 'strAlcoholic' };\n    localStorageObj = { id: recipe.idDrink,\n      type: 'bebida',\n      area: '',\n      category: recipe.strCategory,\n      alcoholicOrNot: recipe.strAlcoholic,\n      name: recipe.strDrink,\n      image: recipe.strDrinkThumb };\n\n    actualRecipeObj = { ...localStorageObj, tags: setTags(recipe.strTags) };\n  }\n  if(clipboard) {\n    setTimeout(() => {\n      setClipboard(false);\n    }, 1000);\n  }\n  useEffect(() => {\n    const isFavorite = JSON.parse(localStorage.getItem('favoriteRecipes'))\n      .some((item) => item.id === recipe.idMeal || item.id === recipe.idDrink);\n    setFavorite(isFavorite);\n    localStorage.setItem('actualRecipe', JSON.stringify(actualRecipeObj));\n  }, [recipe, actualRecipeObj]);\n  const handleClickFavorite = () => {\n    setFavorite(!favorite);\n    if (!favorite) {\n      const favoriteRecipes = JSON.parse(localStorage.getItem('favoriteRecipes'));\n      const allFavorites = [...favoriteRecipes, localStorageObj];\n      localStorage.setItem('favoriteRecipes', JSON.stringify(allFavorites));\n    } else {\n      const favoriteRecipes = JSON.parse(localStorage.getItem('favoriteRecipes'));\n      const allFavorites = favoriteRecipes.filter(\n        (item) => item.id !== localStorageObj.id,\n      );\n      localStorage.setItem('favoriteRecipes', JSON.stringify(allFavorites));\n    }\n  };\n  return (\n    <section className=\"block md:flex md:items-center md:justify-between md:mb-12\">\n      <div className=\"\">\n        <img\n          src={ recipe[ref.strThumb] }\n          alt=\"test\"\n          data-testid=\"recipe-photo\"\n          className=\"w-full h-48 object-cover md:w-96 md:h-auto\"\n        />\n      </div>\n      <div className=\"my-2 h-full flex justify-between px-4 sm:items-center sm:pr-44\">\n        <div className=\"\">\n          <h2 data-testid=\"recipe-title\" className=\"text-2xl border-b border-gray-900 md:text-7xl font-sans md:font-serif\">{ recipe[ref.strTitle] }</h2>\n          <h3 data-testid=\"recipe-category\" className=\"text-center text-gray-800 font-sans md:font-serif md:text-5xl\">{ recipe[ref.strCateg] }</h3>\n        </div>\n        <div>\n        <div className=\"flex items-center\">\n          <button\n            type=\"button\"\n            className=\"bg-transparent border-0 mr-3 p-2\"\n            id=\"liveToastBtn\"\n            data-testid=\"share-btn\"\n            // https://stackoverflow.com/questions/39501289/in-reactjs-how-to-copy-text-to-clipboard - copy to clipboard\n            onClick={ () => {\n              const link = pathname.includes('progress')\n                ? pathname.replace('/in-progress', '')\n                : pathname;\n              navigator.clipboard.writeText(`http://localhost:3000${link}`);\n              setClipboard(true);\n            } }\n          >\n            <img\n              src={ shareIcon }\n              alt=\"share icon\"\n            />\n          </button>\n          <button\n            type=\"button\"\n            className=\"bg-transparent border-0\"\n            data-testid=\"favorite-btn\"\n            onClick={ handleClickFavorite }\n            src={ favorite ? 'blackHeartIcon' : 'whiteHeartIcon' }\n          >\n            <img\n              src={ favorite ? blackHeartIcon : whiteHeartIcon }\n              alt=\"favorite icon\"\n            />\n          </button>\n        </div>\n          <p className={`${clipboard ? 'visible' : 'hidden'} transform  duration-1000 transition-all opacity-90 ease-in-out`}>Link copiado!</p>\n          </div>\n      </div>\n    </section>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}