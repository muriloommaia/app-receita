{"ast":null,"code":"export default async function fetchApi(toSearch, path) {\n  path = path.includes('comida') ? 'meal' : 'cocktail';\n\n  const fethEnd = async function (end) {\n    let search = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n\n    try {\n      const response = await fetch(`${end}${search}`);\n      const data = await response.json();\n      return data;\n    } catch (error) {\n      return error.mensage;\n    }\n  };\n\n  switch (toSearch.type) {\n    case 'radio':\n      switch (toSearch.radio.radioType) {\n        case 'name':\n          return fethEnd(`https://www.the${path}db.com/api/json/v1/1/search.php?s=`, toSearch.radio.search);\n\n        case 'ingredient':\n          return fethEnd(`https://www.the${path}db.com/api/json/v1/1/filter.php?i=`, toSearch.radio.search);\n\n        case 'first-letter':\n          return fethEnd(`https://www.the${path}db.com/api/json/v1/1/search.php?f=`, toSearch.radio.search);\n\n        default:\n          return 'error';\n      }\n\n    case 'category':\n      switch (toSearch.category.categoryType) {\n        case 'filter':\n          return fethEnd(`https://www.the${path}db.com/api/json/v1/1/filter.php?c=`, toSearch.category.search);\n\n        case 'area':\n          return fethEnd(`https://www.the${path}db.com/api/json/v1/1/list.php?a=list`);\n\n        default:\n          return fethEnd(`https://www.the${path}db.com/api/json/v1/1/list.php?c=list`);\n      }\n\n    case 'ingredients':\n      switch (toSearch.ingredients.ingredientsType) {\n        case 'filter':\n          return fethEnd(`https://www.the${path}db.com/api/json/v1/1/filter.php?i=`, toSearch.ingredients.search);\n\n        case 'get':\n          return fethEnd(`https://www.the${path}db.com/api/json/v1/1/list.php?i=list`);\n\n        default:\n          return 'error';\n      }\n\n    case 'random':\n      return fethEnd(`https://www.the${path}db.com/api/json/v1/1/random.php`);\n\n    case 'details':\n      return fethEnd(`https://www.the${path}db.com/api/json/v1/1/lookup.php?i=`, toSearch.details.search);\n\n    case 'getByArea':\n      return fethEnd(`https://www.the${path}db.com/api/json/v1/1/filter.php?a=`, toSearch.getByArea.search);\n\n    default:\n      return fethEnd(`https://www.the${path}db.com/api/json/v1/1/search.php?s=`);\n  }\n}","map":{"version":3,"sources":["/home/muriloomaia/Documents/gitHub/app-receita/src/services/fetchApi.js"],"names":["fetchApi","toSearch","path","includes","fethEnd","end","search","response","fetch","data","json","error","mensage","type","radio","radioType","category","categoryType","ingredients","ingredientsType","details","getByArea"],"mappings":"AAAA,eAAe,eAAeA,QAAf,CAAwBC,QAAxB,EAAkCC,IAAlC,EAAwC;AACrDA,EAAAA,IAAI,GAAGA,IAAI,CAACC,QAAL,CAAc,QAAd,IAA0B,MAA1B,GAAmC,UAA1C;;AACA,QAAMC,OAAO,GAAG,gBAAOC,GAAP,EAA4B;AAAA,QAAhBC,MAAgB,uEAAP,EAAO;;AAC1C,QAAI;AACF,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEH,GAAI,GAAEC,MAAO,EAAjB,CAA5B;AACA,YAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACA,aAAOD,IAAP;AACD,KAJD,CAIE,OAAOE,KAAP,EAAc;AACd,aAAOA,KAAK,CAACC,OAAb;AACD;AACF,GARD;;AASA,UAAQX,QAAQ,CAACY,IAAjB;AACA,SAAK,OAAL;AACE,cAAQZ,QAAQ,CAACa,KAAT,CAAeC,SAAvB;AACA,aAAK,MAAL;AACE,iBAAOX,OAAO,CAAE,kBAAiBF,IAAK,oCAAxB,EAA6DD,QAAQ,CAACa,KAAT,CAAeR,MAA5E,CAAd;;AACF,aAAK,YAAL;AACE,iBAAOF,OAAO,CAAE,kBAAiBF,IAAK,oCAAxB,EAA6DD,QAAQ,CAACa,KAAT,CAAeR,MAA5E,CAAd;;AACF,aAAK,cAAL;AACE,iBAAOF,OAAO,CAAE,kBAAiBF,IAAK,oCAAxB,EAA6DD,QAAQ,CAACa,KAAT,CAAeR,MAA5E,CAAd;;AACF;AAAS,iBAAO,OAAP;AAPT;;AASF,SAAK,UAAL;AACE,cAAQL,QAAQ,CAACe,QAAT,CAAkBC,YAA1B;AACA,aAAK,QAAL;AACE,iBAAOb,OAAO,CAAE,kBAAiBF,IAAK,oCAAxB,EAA6DD,QAAQ,CAACe,QAAT,CAAkBV,MAA/E,CAAd;;AACF,aAAK,MAAL;AACE,iBAAOF,OAAO,CAAE,kBAAiBF,IAAK,sCAAxB,CAAd;;AACF;AACE,iBAAOE,OAAO,CAAE,kBAAiBF,IAAK,sCAAxB,CAAd;AANF;;AAQF,SAAK,aAAL;AACE,cAAQD,QAAQ,CAACiB,WAAT,CAAqBC,eAA7B;AACA,aAAK,QAAL;AACE,iBAAOf,OAAO,CAAE,kBAAiBF,IAAK,oCAAxB,EAA6DD,QAAQ,CAACiB,WAAT,CAAqBZ,MAAlF,CAAd;;AACF,aAAK,KAAL;AACE,iBAAOF,OAAO,CAAE,kBAAiBF,IAAK,sCAAxB,CAAd;;AACF;AACE,iBAAO,OAAP;AANF;;AAQF,SAAK,QAAL;AACE,aAAOE,OAAO,CAAE,kBAAiBF,IAAK,iCAAxB,CAAd;;AACF,SAAK,SAAL;AACE,aAAOE,OAAO,CAAE,kBAAiBF,IAAK,oCAAxB,EAA6DD,QAAQ,CAACmB,OAAT,CAAiBd,MAA9E,CAAd;;AACF,SAAK,WAAL;AACE,aAAOF,OAAO,CAAE,kBAAiBF,IAAK,oCAAxB,EAA6DD,QAAQ,CAACoB,SAAT,CAAmBf,MAAhF,CAAd;;AACF;AACE,aAAOF,OAAO,CAAE,kBAAiBF,IAAK,oCAAxB,CAAd;AApCF;AAsCD","sourcesContent":["export default async function fetchApi(toSearch, path) {\n  path = path.includes('comida') ? 'meal' : 'cocktail';\n  const fethEnd = async (end, search = '') => {\n    try {\n      const response = await fetch(`${end}${search}`);\n      const data = await response.json();\n      return data;\n    } catch (error) {\n      return error.mensage;\n    }\n  };\n  switch (toSearch.type) {\n  case 'radio':\n    switch (toSearch.radio.radioType) {\n    case 'name':\n      return fethEnd(`https://www.the${path}db.com/api/json/v1/1/search.php?s=`, toSearch.radio.search);\n    case 'ingredient':\n      return fethEnd(`https://www.the${path}db.com/api/json/v1/1/filter.php?i=`, toSearch.radio.search);\n    case 'first-letter':\n      return fethEnd(`https://www.the${path}db.com/api/json/v1/1/search.php?f=`, toSearch.radio.search);\n    default: return 'error';\n    }\n  case 'category':\n    switch (toSearch.category.categoryType) {\n    case 'filter':\n      return fethEnd(`https://www.the${path}db.com/api/json/v1/1/filter.php?c=`, toSearch.category.search);\n    case 'area':\n      return fethEnd(`https://www.the${path}db.com/api/json/v1/1/list.php?a=list`);\n    default:\n      return fethEnd(`https://www.the${path}db.com/api/json/v1/1/list.php?c=list`);\n    }\n  case 'ingredients':\n    switch (toSearch.ingredients.ingredientsType) {\n    case 'filter':\n      return fethEnd(`https://www.the${path}db.com/api/json/v1/1/filter.php?i=`, toSearch.ingredients.search);\n    case 'get':\n      return fethEnd(`https://www.the${path}db.com/api/json/v1/1/list.php?i=list`);\n    default:\n      return 'error';\n    }\n  case 'random':\n    return fethEnd(`https://www.the${path}db.com/api/json/v1/1/random.php`);\n  case 'details':\n    return fethEnd(`https://www.the${path}db.com/api/json/v1/1/lookup.php?i=`, toSearch.details.search);\n  case 'getByArea':\n    return fethEnd(`https://www.the${path}db.com/api/json/v1/1/filter.php?a=`, toSearch.getByArea.search);\n  default:\n    return fethEnd(`https://www.the${path}db.com/api/json/v1/1/search.php?s=`);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}