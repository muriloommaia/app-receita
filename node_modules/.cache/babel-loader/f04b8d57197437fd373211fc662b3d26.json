{"ast":null,"code":"var _jsxFileName = \"/home/muriloomaia/Documents/gitHub/app-receita/src/components/Details/ButtonRecipe.jsx\",\n    _s = $RefreshSig$();\n\nimport PropTypes from 'prop-types';\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Redirect } from 'react-router';\nimport { changeCheck } from '../../store/checkSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst handleClick = (setIsOpen, isOpen, allCheck) => {\n  setIsOpen(!isOpen);\n\n  if (!isOpen && allCheck) {\n    const actualRecipe = JSON.parse(localStorage.getItem('actualRecipe'));\n    const doneRecipes = JSON.parse(localStorage.getItem('doneRecipes'));\n    actualRecipe.doneDate = new Date().toLocaleDateString('pt-BR', {\n      timeZone: 'UTC'\n    });\n    localStorage.setItem('doneRecipes', JSON.stringify([...doneRecipes, actualRecipe]));\n  }\n};\n\nexport default function ButtonRecipe(_ref) {\n  _s();\n\n  let {\n    testBtn\n  } = _ref;\n  const [isOpen, setIsOpen] = React.useState(false);\n  const dispatch = useDispatch();\n  const [text, setText] = React.useState('Iniciar');\n  const {\n    allCheck\n  } = useSelector(state => state.allChecked);\n  const {\n    pathname\n  } = window.location;\n  useEffect(() => {\n    dispatch(changeCheck(false));\n    const inProgressRecipes = JSON.parse(localStorage.getItem('inProgressRecipes'));\n    const keyName = pathname.includes('comidas') ? 'meals' : 'cocktails';\n    const ingredientsSaved = inProgressRecipes[keyName][pathname.split('/')[2]];\n\n    if (ingredientsSaved) {\n      setText('Continuar');\n    }\n\n    setIsOpen(false);\n  }, [pathname, dispatch]);\n  if (isOpen && allCheck) return /*#__PURE__*/_jsxDEV(Redirect, {\n    to: \"/receitas-feitas\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 34\n  }, this);\n  if (isOpen) return /*#__PURE__*/_jsxDEV(Redirect, {\n    to: `${pathname}/in-progress`\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 22\n  }, this);\n\n  if (pathname.includes('in-progress')) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"disabled:opacity-50\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        disabled: !allCheck,\n        \"data-testid\": `${testBtn}-recipe-btn`,\n        className: \"fixed bottom-0 p-3 border bg-primary text-gray-50 left-1/2 transform -translate-x-2/4 disabled:opacity-0 disabled:bg-red-400\",\n        onClick: () => handleClick(setIsOpen, isOpen, allCheck),\n        children: `${allCheck ? 'Finalizar' : text} Receita`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      \"data-testid\": `${testBtn}-recipe-btn`,\n      className: \"fixed bottom-0 p-3 border bg-primary text-gray-50 left-1/2 transform -translate-x-2/4 disabled:opacity-50\",\n      onClick: () => handleClick(setIsOpen, isOpen, allCheck),\n      children: `${text} Receita`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ButtonRecipe, \"yeRqs7gJR0EUdboZpfsUPRS7p/w=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = ButtonRecipe;\nButtonRecipe.propTypes = {\n  testBtn: PropTypes.string\n};\nButtonRecipe.defaultProps = {\n  testBtn: 'start'\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"ButtonRecipe\");","map":{"version":3,"sources":["/home/muriloomaia/Documents/gitHub/app-receita/src/components/Details/ButtonRecipe.jsx"],"names":["PropTypes","React","useEffect","useDispatch","useSelector","Redirect","changeCheck","handleClick","setIsOpen","isOpen","allCheck","actualRecipe","JSON","parse","localStorage","getItem","doneRecipes","doneDate","Date","toLocaleDateString","timeZone","setItem","stringify","ButtonRecipe","testBtn","useState","dispatch","text","setText","state","allChecked","pathname","window","location","inProgressRecipes","keyName","includes","ingredientsSaved","split","propTypes","string","defaultProps"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Redirect } from 'react-router';\nimport { changeCheck } from '../../store/checkSlice';\n\nconst handleClick = (setIsOpen, isOpen, allCheck) => {\n  setIsOpen(!isOpen);\n  if (!isOpen && allCheck) {\n    const actualRecipe = JSON.parse(localStorage.getItem('actualRecipe'));\n    const doneRecipes = JSON.parse(localStorage.getItem('doneRecipes'));\n    actualRecipe.doneDate = new Date().toLocaleDateString('pt-BR', { timeZone: 'UTC' });\n    localStorage.setItem('doneRecipes', JSON.stringify([...doneRecipes, actualRecipe]));\n  }\n};\n\nexport default function ButtonRecipe({ testBtn }) {\n  const [isOpen, setIsOpen] = React.useState(false);\n  const dispatch = useDispatch();\n  const [text, setText] = React.useState('Iniciar');\n  const { allCheck } = useSelector((state) => state.allChecked);\n  const { pathname } = window.location;\n  useEffect(() => {\n    dispatch(changeCheck(false));\n    const inProgressRecipes = JSON.parse(localStorage.getItem('inProgressRecipes'));\n    const keyName = pathname.includes('comidas') ? 'meals' : 'cocktails';\n    const ingredientsSaved = inProgressRecipes[keyName][pathname.split('/')[2]];\n    if (ingredientsSaved) {\n      setText('Continuar');\n    }\n    setIsOpen(false);\n  }, [pathname, dispatch]);\n\n  if (isOpen && allCheck) return <Redirect to=\"/receitas-feitas\" />;\n  if (isOpen) return <Redirect to={ `${pathname}/in-progress` } />;\n  if (pathname.includes('in-progress')) {\n    return (\n      <div className=\"disabled:opacity-50\">\n        <button\n          type=\"button\"\n          disabled={ !allCheck }\n          data-testid={ `${testBtn}-recipe-btn` }\n          className=\"fixed bottom-0 p-3 border bg-primary text-gray-50 left-1/2 transform -translate-x-2/4 disabled:opacity-0 disabled:bg-red-400\"\n          onClick={ () => handleClick(setIsOpen, isOpen, allCheck) }\n        >\n          {`${allCheck ? 'Finalizar' : text} Receita`}\n        </button>\n      </div>\n    );\n  }\n  return (\n    <div>\n      <button\n        type=\"button\"\n        data-testid={ `${testBtn}-recipe-btn` }\n        className=\"fixed bottom-0 p-3 border bg-primary text-gray-50 left-1/2 transform -translate-x-2/4 disabled:opacity-50\"\n        onClick={ () => handleClick(setIsOpen, isOpen, allCheck) }\n      >\n        {`${text} Receita`}\n      </button>\n    </div>\n  );\n}\n\nButtonRecipe.propTypes = {\n  testBtn: PropTypes.string,\n};\n\nButtonRecipe.defaultProps = {\n  testBtn: 'start',\n};\n"]},"metadata":{},"sourceType":"module"}