{"ast":null,"code":"var _jsxFileName = \"/home/muriloomaia/Documents/gitHub/app-receita/src/components/favoritesAndDone/BodyFavoriteAndDone.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport whiteHeartIcon from \"../../images/whiteHeartIcon.svg\";\nimport blackHeartIcon from \"../../images/blackHeartIcon.svg\";\nimport shareIcon from \"../../images/shareIcon.svg\";\nimport TagsAndDate from './TagsAndDate';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst setKeyName = pathname => pathname.includes('favoritas') ? 'favoriteRecipes' : 'doneRecipes';\n\nexport default function BodyFavoriteAndDone() {\n  _s();\n\n  const [favorite] = React.useState(true);\n  const [done, setDone] = React.useState(false);\n  const [clipboard, setClipboard] = React.useState(false);\n  const {\n    filter\n  } = useSelector(state => state.filterFav);\n  const [cards, setCards] = React.useState([]);\n  const {\n    pathname\n  } = window.location;\n  const keyName = setKeyName(pathname);\n  useEffect(() => {\n    const favorites = JSON.parse(localStorage.getItem(keyName));\n\n    if (filter === 'all') {\n      setCards(favorites);\n    } else {\n      const filterFav = favorites.filter(fav => fav.type === filter);\n      setCards(filterFav);\n    }\n\n    if (pathname.includes('feitas')) {\n      setDone(true);\n    }\n  }, [filter, pathname, keyName]);\n\n  const handleClickFavorite = itemObj => {\n    const allFavorites = cards.filter(item => item.id !== itemObj.id);\n    localStorage.setItem(keyName, JSON.stringify(allFavorites));\n    setCards(allFavorites);\n  };\n\n  const favoriteButton = (index, item) => /*#__PURE__*/_jsxDEV(\"button\", {\n    type: \"button\",\n    className: \"bg-transparent border-0\",\n    \"data-testid\": `${index}-horizontal-favorite-btn`,\n    onClick: () => handleClickFavorite(item),\n    src: favorite ? 'blackHeartIcon' : 'whiteHeartIcon',\n    children: /*#__PURE__*/_jsxDEV(\"img\", {\n      src: favorite ? blackHeartIcon : whiteHeartIcon,\n      alt: \"favorite icon\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: cards && cards.map((item, index) => {\n        const foodOrDrink = item.type === 'comida' ? 'area' : 'alcoholicOrNot';\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            to: `${item.type}s/${item.id}`,\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: item.image,\n              alt: item.id,\n              className: \"w-25\",\n              \"data-testid\": `${index}-horizontal-image`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              \"data-testid\": `${index}-horizontal-top-text`,\n              children: `${item[foodOrDrink]} - ${item.category}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              \"data-testid\": `${index}-horizontal-name`,\n              children: item.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"bg-transparent border-0\",\n              id: \"liveToastBtn\",\n              \"data-testid\": `${index}-horizontal-share-btn`,\n              onClick: () => {\n                navigator.clipboard.writeText(`http://localhost:3000/${item.type}s/${item.id}`);\n                setClipboard(true);\n              },\n              src: shareIcon,\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: shareIcon,\n                alt: \"share icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 17\n            }, this), !done && favoriteButton(index, item), clipboard && /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Link copiado!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 32\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this), done && /*#__PURE__*/_jsxDEV(TagsAndDate, {\n            props: {\n              item,\n              index\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 25\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n\n_s(BodyFavoriteAndDone, \"7+G7taROl/zsSGyodCgPlKWTnF4=\", false, function () {\n  return [useSelector];\n});\n\n_c = BodyFavoriteAndDone;\n\nvar _c;\n\n$RefreshReg$(_c, \"BodyFavoriteAndDone\");","map":{"version":3,"sources":["/home/muriloomaia/Documents/gitHub/app-receita/src/components/favoritesAndDone/BodyFavoriteAndDone.jsx"],"names":["React","useEffect","useSelector","Link","TagsAndDate","setKeyName","pathname","includes","BodyFavoriteAndDone","favorite","useState","done","setDone","clipboard","setClipboard","filter","state","filterFav","cards","setCards","window","location","keyName","favorites","JSON","parse","localStorage","getItem","fav","type","handleClickFavorite","itemObj","allFavorites","item","id","setItem","stringify","favoriteButton","index","blackHeartIcon","whiteHeartIcon","map","foodOrDrink","image","category","name","navigator","writeText","shareIcon"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport whiteHeartIcon from '../../images/whiteHeartIcon.svg';\nimport blackHeartIcon from '../../images/blackHeartIcon.svg';\nimport shareIcon from '../../images/shareIcon.svg';\nimport TagsAndDate from './TagsAndDate';\n\nconst setKeyName = (pathname) => (pathname.includes('favoritas')\n  ? 'favoriteRecipes'\n  : 'doneRecipes');\n\nexport default function BodyFavoriteAndDone() {\n  const [favorite] = React.useState(true);\n  const [done, setDone] = React.useState(false);\n  const [clipboard, setClipboard] = React.useState(false);\n  const { filter } = useSelector((state) => state.filterFav);\n  const [cards, setCards] = React.useState([]);\n  const { pathname } = window.location;\n  const keyName = setKeyName(pathname);\n  useEffect(() => {\n    const favorites = JSON.parse(localStorage.getItem(keyName));\n    if (filter === 'all') {\n      setCards(favorites);\n    } else {\n      const filterFav = favorites.filter((fav) => fav.type === filter);\n      setCards(filterFav);\n    }\n    if (pathname.includes('feitas')) {\n      setDone(true);\n    }\n  }, [filter, pathname, keyName]);\n  const handleClickFavorite = (itemObj) => {\n    const allFavorites = cards.filter(\n      (item) => item.id !== itemObj.id,\n    );\n    localStorage.setItem(keyName, JSON.stringify(allFavorites));\n    setCards(allFavorites);\n  };\n  const favoriteButton = (index, item) => (\n    <button\n      type=\"button\"\n      className=\"bg-transparent border-0\"\n      data-testid={ `${index}-horizontal-favorite-btn` }\n      onClick={ () => handleClickFavorite(item) }\n      src={ favorite ? 'blackHeartIcon' : 'whiteHeartIcon' }\n    >\n      <img\n        src={ favorite ? blackHeartIcon : whiteHeartIcon }\n        alt=\"favorite icon\"\n      />\n    </button>\n  );\n  return (\n    <div>\n      <div>\n        { cards\n        && cards.map((item, index) => {\n          const foodOrDrink = item.type === 'comida' ? 'area' : 'alcoholicOrNot';\n          return (\n            <div\n              key={ index }\n            >\n              <Link to={ `${item.type}s/${item.id}` }>\n                <img\n                  src={ item.image }\n                  alt={ item.id }\n                  className=\"w-25\"\n                  data-testid={ `${index}-horizontal-image` }\n                />\n                <p data-testid={ `${index}-horizontal-top-text` }>\n                  {`${item[foodOrDrink]} - ${item.category}`}\n                </p>\n                <p data-testid={ `${index}-horizontal-name` }>{item.name}</p>\n              </Link>\n              <div>\n                <button\n                  type=\"button\"\n                  className=\"bg-transparent border-0\"\n                  id=\"liveToastBtn\"\n                  data-testid={ `${index}-horizontal-share-btn` }\n                  onClick={ () => {\n                    navigator.clipboard.writeText(`http://localhost:3000/${item.type}s/${item.id}`);\n                    setClipboard(true);\n                  } }\n                  src={ shareIcon }\n                >\n                  <img\n                    src={ shareIcon }\n                    alt=\"share icon\"\n                  />\n                </button>\n                { !done && favoriteButton(index, item) }\n                { clipboard && <p>Link copiado!</p> }\n              </div>\n              { done && <TagsAndDate props={ { item, index } } />}\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}